// generated 2008/9/8 1:36:17 WIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/Monita/src/db_dialog.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//db_dialog.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "db_dialog_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>

db_dialog_glade::db_dialog_glade(
)
{  db_dialog = this;
   gmm_data = new GlademmData(get_accel_group());
   cancelbutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   okbutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   entry_host = Gtk::manage(new class Gtk::Entry());
   entry_port = Gtk::manage(new class Gtk::Entry());
   entry_username = Gtk::manage(new class Gtk::Entry());
   label4 = Gtk::manage(new class Gtk::Label(_("Host")));
   label6 = Gtk::manage(new class Gtk::Label(_("Username")));
   entry_password = Gtk::manage(new class Gtk::Entry());
   entry_namadb = Gtk::manage(new class Gtk::Entry());
   label7 = Gtk::manage(new class Gtk::Label(_("Password")));
   label8 = Gtk::manage(new class Gtk::Label(_("Nama Database")));
   label9 = Gtk::manage(new class Gtk::Label(_("Port")));
   table1 = Gtk::manage(new class Gtk::Table(2, 2, true));
   label1 = Gtk::manage(new class Gtk::Label(_("<b>Setting Database</b>")));
   frame1 = Gtk::manage(new class Gtk::Frame());
   cancelbutton1->set_flags(Gtk::CAN_FOCUS);
   cancelbutton1->set_flags(Gtk::CAN_DEFAULT);
   cancelbutton1->add_accelerator("clicked", gmm_data->getAccelGroup(), GDK_Escape, Gdk::ModifierType(0), Gtk::ACCEL_VISIBLE);
   cancelbutton1->set_relief(Gtk::RELIEF_NORMAL);
   okbutton1->set_flags(Gtk::CAN_FOCUS);
   okbutton1->set_flags(Gtk::CAN_DEFAULT);
   okbutton1->add_accelerator("clicked", gmm_data->getAccelGroup(), GDK_Return, Gdk::ModifierType(0), Gtk::ACCEL_VISIBLE);
   okbutton1->set_relief(Gtk::RELIEF_NORMAL);
   db_dialog->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   entry_host->set_flags(Gtk::CAN_FOCUS);
   entry_host->set_visibility(true);
   entry_host->set_editable(true);
   entry_host->set_max_length(0);
   entry_host->set_text(_(""));
   entry_host->set_has_frame(true);
   entry_host->set_activates_default(false);
   entry_port->set_flags(Gtk::CAN_FOCUS);
   entry_port->set_visibility(true);
   entry_port->set_editable(true);
   entry_port->set_max_length(0);
   entry_port->set_text(_(""));
   entry_port->set_has_frame(true);
   entry_port->set_activates_default(false);
   entry_username->set_flags(Gtk::CAN_FOCUS);
   entry_username->set_visibility(true);
   entry_username->set_editable(true);
   entry_username->set_max_length(0);
   entry_username->set_text(_(""));
   entry_username->set_has_frame(true);
   entry_username->set_activates_default(false);
   label4->set_alignment(0.1,0.5);
   label4->set_padding(0,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   label6->set_alignment(0.1,0.5);
   label6->set_padding(0,0);
   label6->set_justify(Gtk::JUSTIFY_LEFT);
   label6->set_line_wrap(false);
   label6->set_use_markup(false);
   label6->set_selectable(false);
   entry_password->set_flags(Gtk::CAN_FOCUS);
   entry_password->set_visibility(true);
   entry_password->set_editable(true);
   entry_password->set_max_length(0);
   entry_password->set_text(_(""));
   entry_password->set_has_frame(true);
   entry_password->set_activates_default(false);
   entry_namadb->set_flags(Gtk::CAN_FOCUS);
   entry_namadb->set_visibility(true);
   entry_namadb->set_editable(true);
   entry_namadb->set_max_length(0);
   entry_namadb->set_text(_(""));
   entry_namadb->set_has_frame(true);
   entry_namadb->set_activates_default(false);
   label7->set_alignment(0.1,0.5);
   label7->set_padding(0,0);
   label7->set_justify(Gtk::JUSTIFY_LEFT);
   label7->set_line_wrap(false);
   label7->set_use_markup(false);
   label7->set_selectable(false);
   label8->set_alignment(0.1,0.5);
   label8->set_padding(0,0);
   label8->set_justify(Gtk::JUSTIFY_LEFT);
   label8->set_line_wrap(false);
   label8->set_use_markup(false);
   label8->set_selectable(false);
   label9->set_alignment(0.1,0.5);
   label9->set_padding(0,0);
   label9->set_justify(Gtk::JUSTIFY_LEFT);
   label9->set_line_wrap(false);
   label9->set_use_markup(false);
   label9->set_selectable(false);
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*entry_host, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_port, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_username, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label4, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label6, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_password, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_namadb, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label7, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label8, 0, 1, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label9, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(true);
   label1->set_selectable(false);
   frame1->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame1->set_label_align(0,0.5);
   frame1->add(*table1);
   frame1->set_label_widget(*label1);
   db_dialog->get_vbox()->set_homogeneous(false);
   db_dialog->get_vbox()->set_spacing(0);
   db_dialog->get_vbox()->pack_start(*frame1);
   db_dialog->set_title(_("Setting Database"));
   db_dialog->set_modal(false);
   db_dialog->property_window_position().set_value(Gtk::WIN_POS_NONE);
   db_dialog->set_resizable(true);
   db_dialog->property_destroy_with_parent().set_value(false);
   db_dialog->set_has_separator(true);
   db_dialog->add_action_widget(*cancelbutton1, -6);
   db_dialog->add_action_widget(*okbutton1, -5);
   cancelbutton1->show();
   okbutton1->show();
   entry_host->show();
   entry_port->show();
   entry_username->show();
   label4->show();
   label6->show();
   entry_password->show();
   entry_namadb->show();
   label7->show();
   label8->show();
   label9->show();
   table1->show();
   label1->show();
   frame1->show();
   db_dialog->show();
}

db_dialog_glade::~db_dialog_glade()
{  delete gmm_data;
}
