// generated 2008/8/9 10:44:33 WIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/Monita/src/dlg_posting_data.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//dlg_edit_post.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "dlg_edit_post_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/radiobutton.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/label.h>
#include <gtkmm/frame.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/table.h>

dlg_edit_post_glade::dlg_edit_post_glade(
)
{  
   
   Gtk::Dialog *dlg_edit_post = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *cancelbutton2 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   Gtk::Button *okbutton2 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   Gtk::RadioButton::Group _RadioBGroup_radio_post_localdisplay;
   radio_post_localdisplay = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radio_post_localdisplay, _("Lokal Display (Panel Monita)")));
   radio_post_gsm = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_radio_post_localdisplay, _("Handphone/GSM")));
   
   Gtk::VBox *vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment5 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label5 = Gtk::manage(new class Gtk::Label(_("Jenis Post")));
   Gtk::Frame *frame2 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label7 = Gtk::manage(new class Gtk::Label(_("Nama  Post")));
   check_post_aktif = Gtk::manage(new class Gtk::CheckButton(_("Post Data Aktif")));
   entry_ip_address = Gtk::manage(new class Gtk::Entry());
   entry_ip_port = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *label8 = Gtk::manage(new class Gtk::Label(_("IP Address")));
   Gtk::Label *label9 = Gtk::manage(new class Gtk::Label(_("IP Port")));
   Gtk::Label *label10 = Gtk::manage(new class Gtk::Label(_("(default: 5001)")));
   Gtk::Label *label11 = Gtk::manage(new class Gtk::Label(_("Periode")));
   Gtk::Adjustment *spin_periode_adj = Gtk::manage(new class Gtk::Adjustment(1, 0, 100, 1, 10, 10));
   spin_periode = Gtk::manage(new class Gtk::SpinButton(*spin_periode_adj, 1, 0));
   
   Gtk::Label *label12 = Gtk::manage(new class Gtk::Label(_("(detik)")));
   entry_nama_post = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Table *table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Alignment *alignment6 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label6 = Gtk::manage(new class Gtk::Label(_("Setting")));
   Gtk::Frame *frame3 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label14 = Gtk::manage(new class Gtk::Label(_("Informasi tambahan")));
   entry_keterangan = Gtk::manage(new class Gtk::Entry());
   
   Gtk::HBox *hbox5 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::Alignment *alignment7 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label13 = Gtk::manage(new class Gtk::Label(_("Keterangan")));
   Gtk::Frame *frame4 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   cancelbutton2->set_flags(Gtk::CAN_FOCUS);
   cancelbutton2->set_flags(Gtk::CAN_DEFAULT);
   cancelbutton2->set_relief(Gtk::RELIEF_NORMAL);
   okbutton2->set_flags(Gtk::CAN_FOCUS);
   okbutton2->set_flags(Gtk::CAN_DEFAULT);
   okbutton2->set_relief(Gtk::RELIEF_NORMAL);
   dlg_edit_post->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   radio_post_localdisplay->set_flags(Gtk::CAN_FOCUS);
   radio_post_localdisplay->set_relief(Gtk::RELIEF_NORMAL);
   radio_post_localdisplay->set_mode(true);
   radio_post_localdisplay->set_active(false);
   radio_post_gsm->set_flags(Gtk::CAN_FOCUS);
   radio_post_gsm->set_relief(Gtk::RELIEF_NORMAL);
   radio_post_gsm->set_mode(true);
   radio_post_gsm->set_active(false);
   vbox2->pack_start(*radio_post_localdisplay, Gtk::PACK_EXPAND_PADDING, 0);
   vbox2->pack_start(*radio_post_gsm, Gtk::PACK_EXPAND_PADDING, 0);
   alignment5->add(*vbox2);
   label5->set_alignment(0.5,0.5);
   label5->set_padding(0,0);
   label5->set_justify(Gtk::JUSTIFY_LEFT);
   label5->set_line_wrap(false);
   label5->set_use_markup(true);
   label5->set_selectable(false);
   frame2->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment5);
   frame2->set_label_widget(*label5);
   label7->set_alignment(0,0.5);
   label7->set_padding(0,0);
   label7->set_justify(Gtk::JUSTIFY_LEFT);
   label7->set_line_wrap(false);
   label7->set_use_markup(false);
   label7->set_selectable(false);
   check_post_aktif->set_flags(Gtk::CAN_FOCUS);
   check_post_aktif->set_relief(Gtk::RELIEF_NORMAL);
   check_post_aktif->set_mode(true);
   check_post_aktif->set_active(false);
   entry_ip_address->set_flags(Gtk::CAN_FOCUS);
   entry_ip_address->set_visibility(true);
   entry_ip_address->set_editable(true);
   entry_ip_address->set_max_length(0);
   entry_ip_address->set_text(_("192.168.1."));
   entry_ip_address->set_has_frame(true);
   entry_ip_address->set_activates_default(false);
   entry_ip_port->set_flags(Gtk::CAN_FOCUS);
   entry_ip_port->set_visibility(true);
   entry_ip_port->set_editable(true);
   entry_ip_port->set_max_length(0);
   entry_ip_port->set_text(_("5001"));
   entry_ip_port->set_has_frame(true);
   entry_ip_port->set_activates_default(false);
   label8->set_alignment(0,0.5);
   label8->set_padding(0,0);
   label8->set_justify(Gtk::JUSTIFY_LEFT);
   label8->set_line_wrap(false);
   label8->set_use_markup(false);
   label8->set_selectable(false);
   label9->set_alignment(0,0.5);
   label9->set_padding(0,0);
   label9->set_justify(Gtk::JUSTIFY_LEFT);
   label9->set_line_wrap(false);
   label9->set_use_markup(false);
   label9->set_selectable(false);
   label10->set_alignment(0,0.5);
   label10->set_padding(0,0);
   label10->set_justify(Gtk::JUSTIFY_LEFT);
   label10->set_line_wrap(false);
   label10->set_use_markup(false);
   label10->set_selectable(false);
   label11->set_alignment(0,0.5);
   label11->set_padding(0,0);
   label11->set_justify(Gtk::JUSTIFY_LEFT);
   label11->set_line_wrap(false);
   label11->set_use_markup(false);
   label11->set_selectable(false);
   spin_periode->set_flags(Gtk::CAN_FOCUS);
   spin_periode->set_update_policy(Gtk::UPDATE_ALWAYS);
   spin_periode->set_numeric(false);
   spin_periode->set_digits(0);
   spin_periode->set_wrap(false);
   label12->set_alignment(0,0.5);
   label12->set_padding(0,0);
   label12->set_justify(Gtk::JUSTIFY_LEFT);
   label12->set_line_wrap(false);
   label12->set_use_markup(false);
   label12->set_selectable(false);
   entry_nama_post->set_flags(Gtk::CAN_FOCUS);
   entry_nama_post->set_visibility(true);
   entry_nama_post->set_editable(true);
   entry_nama_post->set_max_length(0);
   entry_nama_post->set_text(_(""));
   entry_nama_post->set_has_frame(true);
   entry_nama_post->set_activates_default(false);
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*label7, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*check_post_aktif, 1, 2, 4, 5, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_ip_address, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_ip_port, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label8, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label9, 0, 1, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label10, 2, 3, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label11, 0, 1, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*spin_periode, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*label12, 2, 3, 3, 4, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*entry_nama_post, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   alignment6->add(*table1);
   label6->set_alignment(0.5,0.5);
   label6->set_padding(0,0);
   label6->set_justify(Gtk::JUSTIFY_LEFT);
   label6->set_line_wrap(false);
   label6->set_use_markup(true);
   label6->set_selectable(false);
   frame3->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame3->set_label_align(0,0.5);
   frame3->add(*alignment6);
   frame3->set_label_widget(*label6);
   label14->set_alignment(0.5,0.5);
   label14->set_padding(0,0);
   label14->set_justify(Gtk::JUSTIFY_LEFT);
   label14->set_line_wrap(false);
   label14->set_use_markup(false);
   label14->set_selectable(false);
   entry_keterangan->set_flags(Gtk::CAN_FOCUS);
   entry_keterangan->set_visibility(true);
   entry_keterangan->set_editable(true);
   entry_keterangan->set_max_length(0);
   entry_keterangan->set_text(_(""));
   entry_keterangan->set_has_frame(true);
   entry_keterangan->set_activates_default(false);
   hbox5->pack_start(*label14, Gtk::PACK_SHRINK, 0);
   hbox5->pack_start(*entry_keterangan);
   alignment7->add(*hbox5);
   label13->set_alignment(0.5,0.5);
   label13->set_padding(0,0);
   label13->set_justify(Gtk::JUSTIFY_LEFT);
   label13->set_line_wrap(false);
   label13->set_use_markup(true);
   label13->set_selectable(false);
   frame4->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame4->set_label_align(0,0.5);
   frame4->add(*alignment7);
   frame4->set_label_widget(*label13);
   vbox1->pack_start(*frame2);
   vbox1->pack_start(*frame3);
   vbox1->pack_start(*frame4);
   dlg_edit_post->get_vbox()->set_homogeneous(false);
   dlg_edit_post->get_vbox()->set_spacing(0);
   dlg_edit_post->get_vbox()->pack_start(*vbox1);
   dlg_edit_post->set_title(_("Edit Post Data"));
   dlg_edit_post->set_modal(false);
   dlg_edit_post->property_window_position().set_value(Gtk::WIN_POS_NONE);
   dlg_edit_post->set_resizable(true);
   dlg_edit_post->property_destroy_with_parent().set_value(false);
   dlg_edit_post->set_has_separator(true);
   dlg_edit_post->add_action_widget(*cancelbutton2, -6);
   dlg_edit_post->add_action_widget(*okbutton2, -5);
   cancelbutton2->show();
   okbutton2->show();
   radio_post_localdisplay->show();
   radio_post_gsm->show();
   vbox2->show();
   alignment5->show();
   label5->show();
   frame2->show();
   label7->show();
   check_post_aktif->show();
   entry_ip_address->show();
   entry_ip_port->show();
   label8->show();
   label9->show();
   label10->show();
   label11->show();
   spin_periode->show();
   label12->show();
   entry_nama_post->show();
   table1->show();
   alignment6->show();
   label6->show();
   frame3->show();
   label14->show();
   entry_keterangan->show();
   hbox5->show();
   alignment7->show();
   label13->show();
   frame4->show();
   vbox1->show();
   dlg_edit_post->show();
   radio_post_localdisplay->signal_group_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   radio_post_gsm->signal_group_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   check_post_aktif->signal_toggled().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   entry_ip_address->signal_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   entry_ip_port->signal_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   spin_periode->signal_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
   entry_keterangan->signal_changed().connect(SigC::slot(*this, &dlg_edit_post_glade::on_parameter_changed), false);
}

dlg_edit_post_glade::~dlg_edit_post_glade()
{  delete gmm_data;
}
