// generated 2008/9/23 9:54:47 WIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/Monita/src/monitaapp.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//dlg_splash.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "dlg_splash_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#include <gtkmm/textview.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/progressbar.h>

dlg_splash_glade::dlg_splash_glade(
)
{  dlg_splash = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Label *label47 = Gtk::manage(new class Gtk::Label(_("label47")));
   Gtk::Label *label48 = Gtk::manage(new class Gtk::Label(_("label48")));
   Gtk::Label *label49 = Gtk::manage(new class Gtk::Label(_("label49")));
   Gtk::HBox *hbox9 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::TextView *textview1 = Gtk::manage(new class Gtk::TextView());
   Gtk::ScrolledWindow *scrolledwindow13 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::ProgressBar *progressbar1 = Gtk::manage(new class Gtk::ProgressBar());
   Gtk::VBox *vbox6 = Gtk::manage(new class Gtk::VBox(false, 0));
   dlg_splash->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   label47->set_alignment(0.5,0.5);
   label47->set_padding(0,0);
   label47->set_justify(Gtk::JUSTIFY_LEFT);
   label47->set_line_wrap(false);
   label47->set_use_markup(false);
   label47->set_selectable(false);
   label48->set_alignment(0.5,0.5);
   label48->set_padding(0,0);
   label48->set_justify(Gtk::JUSTIFY_LEFT);
   label48->set_line_wrap(false);
   label48->set_use_markup(false);
   label48->set_selectable(false);
   label49->set_alignment(0.5,0.5);
   label49->set_padding(0,0);
   label49->set_justify(Gtk::JUSTIFY_LEFT);
   label49->set_line_wrap(false);
   label49->set_use_markup(false);
   label49->set_selectable(false);
   hbox9->pack_start(*label47, Gtk::PACK_SHRINK, 0);
   hbox9->pack_start(*label48, Gtk::PACK_SHRINK, 0);
   hbox9->pack_start(*label49, Gtk::PACK_SHRINK, 0);
   textview1->set_flags(Gtk::CAN_FOCUS);
   textview1->set_editable(false);
   textview1->set_cursor_visible(false);
   textview1->set_pixels_above_lines(0);
   textview1->set_pixels_below_lines(0);
   textview1->set_pixels_inside_wrap(0);
   textview1->set_left_margin(0);
   textview1->set_right_margin(0);
   textview1->set_indent(0);
   textview1->set_wrap_mode(Gtk::WRAP_NONE);
   textview1->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow13->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow13->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow13->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow13->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow13->add(*textview1);
   vbox6->pack_start(*hbox9);
   vbox6->pack_start(*scrolledwindow13);
   vbox6->pack_start(*progressbar1, Gtk::PACK_SHRINK, 0);
   dlg_splash->get_vbox()->set_homogeneous(false);
   dlg_splash->get_vbox()->set_spacing(0);
   dlg_splash->get_vbox()->pack_start(*vbox6);
   dlg_splash->set_title(_("Monita"));
   dlg_splash->set_modal(false);
   dlg_splash->property_window_position().set_value(Gtk::WIN_POS_CENTER);
   dlg_splash->set_resizable(true);
   dlg_splash->property_destroy_with_parent().set_value(false);
   dlg_splash->set_has_separator(true);
   label47->show();
   label48->show();
   label49->show();
   hbox9->show();
   textview1->show();
   scrolledwindow13->show();
   progressbar1->show();
   vbox6->show();
   dlg_splash->show();
}

dlg_splash_glade::~dlg_splash_glade()
{  delete gmm_data;
}
