// generated 2008/7/16 16:36:53 WIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/Documents/Program/MonitaApp/src/monitaapp.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//db_setting.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "db_setting_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>

db_setting_glade::db_setting_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  db_setting = this;
   gmm_data = new GlademmData(get_accel_group());
   entry1 = Gtk::manage(new class Gtk::Entry());
   entry2 = Gtk::manage(new class Gtk::Entry());
   entry3 = Gtk::manage(new class Gtk::Entry());
   entry4 = Gtk::manage(new class Gtk::Entry());
   entry5 = Gtk::manage(new class Gtk::Entry());
   fixed2 = Gtk::manage(new class Gtk::Fixed());
   alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   label1 = Gtk::manage(new class Gtk::Label(_("<b>frame1</b>")));
   frame1 = Gtk::manage(new class Gtk::Frame());
   buttonBatal = Gtk::manage(new class Gtk::Button(_("_Batal"), true));
   buttonOK = Gtk::manage(new class Gtk::Button(_("_OK"), true));
   fixed1 = Gtk::manage(new class Gtk::Fixed());
   vbox2 = Gtk::manage(new class Gtk::VBox(true, 0));
   entry1->set_size_request(160,26);
   entry1->set_flags(Gtk::CAN_FOCUS);
   entry1->set_visibility(true);
   entry1->set_editable(true);
   entry1->set_max_length(0);
   entry1->set_text(_(""));
   entry1->set_has_frame(true);
   entry1->set_activates_default(false);
   entry2->set_size_request(160,26);
   entry2->set_flags(Gtk::CAN_FOCUS);
   entry2->set_visibility(true);
   entry2->set_editable(true);
   entry2->set_max_length(0);
   entry2->set_text(_(""));
   entry2->set_has_frame(true);
   entry2->set_activates_default(false);
   entry3->set_size_request(160,26);
   entry3->set_flags(Gtk::CAN_FOCUS);
   entry3->set_visibility(true);
   entry3->set_editable(true);
   entry3->set_max_length(0);
   entry3->set_text(_(""));
   entry3->set_has_frame(true);
   entry3->set_activates_default(false);
   entry4->set_size_request(160,26);
   entry4->set_flags(Gtk::CAN_FOCUS);
   entry4->set_visibility(true);
   entry4->set_editable(true);
   entry4->set_max_length(0);
   entry4->set_text(_(""));
   entry4->set_has_frame(true);
   entry4->set_activates_default(false);
   entry5->set_size_request(160,26);
   entry5->set_flags(Gtk::CAN_FOCUS);
   entry5->set_visibility(true);
   entry5->set_editable(true);
   entry5->set_max_length(0);
   entry5->set_text(_(""));
   entry5->set_has_frame(true);
   entry5->set_activates_default(false);
   fixed2->put(*entry1, 72, 16);
   fixed2->put(*entry2, 72, 48);
   fixed2->put(*entry3, 72, 80);
   fixed2->put(*entry4, 72, 112);
   fixed2->put(*entry5, 72, 144);
   alignment2->add(*fixed2);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(true);
   label1->set_selectable(false);
   frame1->set_shadow_type(Gtk::SHADOW_NONE);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignment2);
   frame1->set_label_widget(*label1);
   buttonBatal->set_size_request(55,28);
   buttonBatal->set_flags(Gtk::CAN_FOCUS);
   buttonBatal->set_relief(Gtk::RELIEF_NORMAL);
   buttonOK->set_size_request(55,28);
   buttonOK->set_flags(Gtk::CAN_FOCUS);
   buttonOK->set_relief(Gtk::RELIEF_NORMAL);
   fixed1->put(*buttonBatal, 264, 8);
   fixed1->put(*buttonOK, 336, 8);
   vbox2->pack_start(*frame1);
   vbox2->pack_start(*fixed1);
   db_setting->set_title(_("window1"));
   db_setting->set_modal(false);
   db_setting->property_window_position().set_value(Gtk::WIN_POS_NONE);
   db_setting->set_resizable(true);
   db_setting->property_destroy_with_parent().set_value(false);
   db_setting->add(*vbox2);
   entry1->show();
   entry2->show();
   entry3->show();
   entry4->show();
   entry5->show();
   fixed2->show();
   alignment2->show();
   label1->show();
   frame1->show();
   buttonBatal->show();
   buttonOK->show();
   fixed1->show();
   vbox2->show();
   db_setting->show();
   buttonOK->signal_clicked().connect(SigC::slot(*this, &db_setting_glade::on_buttonOK_clicked), false);
   buttonOK->grab_default();
}

db_setting_glade::~db_setting_glade()
{  delete gmm_data;
}
