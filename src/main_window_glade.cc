// generated 2008/9/23 10:04:41 WIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/Monita/src/monitaapp.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//main_window.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_window_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/image.h>
#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menubar.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/button.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <gtkmm/toolitem.h>
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#endif //
#include <gtkmm/toolbar.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/eventbox.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/separator.h>
#include <gtkmm/frame.h>
#include <gtkmm/table.h>
#include <gtkmm/notebook.h>
#include <gtkmm/paned.h>
#include <gtkmm/statusbar.h>

main_window_glade::main_window_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *main_window = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Image *image59 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-preferences"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *konfigurasi1 = NULL;
   Gtk::Image *image60 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-network"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *database_login_setting1 = NULL;
   Gtk::MenuItem *separator3 = NULL;
   Gtk::MenuItem *buat_laporan = NULL;
   Gtk::MenuItem *separator2 = NULL;
   Gtk::MenuItem *tambah_entri_perusahaan1 = NULL;
   Gtk::MenuItem *separator1 = NULL;
   Gtk::ImageMenuItem *quit1 = NULL;
   Gtk::Menu *menuitem4_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem4 = NULL;
   Gtk::Image *image61 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-execute"), Gtk::IconSize(1)));
   Gtk::ImageMenuItem *sumber_data1 = NULL;
   Gtk::MenuItem *posting_pengiriman_data1 = NULL;
   Gtk::Menu *menuitem5_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem5 = NULL;
   Gtk::MenuItem *mulai_baca_data1 = NULL;
   Gtk::MenuItem *stop_baca_data1 = NULL;
   Gtk::Menu *menuitem6_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem6 = NULL;
   Gtk::MenuItem *about1 = NULL;
   Gtk::Menu *menuitem7_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem7 = NULL;
   Gtk::MenuBar *menubar1 = Gtk::manage(new class Gtk::MenuBar());
   Gtk::Image *image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-network"), Gtk::IconSize(4)));
   Gtk::Label *label3 = Gtk::manage(new class Gtk::Label(_("_Database Setting"), true));
   Gtk::HBox *hbox2 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Gtk::Button *buttonbuka = Gtk::manage(new class Gtk::Button());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   Gtk::ToolItem *toolitem1 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *image2 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-execute"), Gtk::IconSize(4)));
   Gtk::Label *label4 = Gtk::manage(new class Gtk::Label(_("_Sumber Data"), true));
   Gtk::HBox *hbox3 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Gtk::Button *button_sumber = Gtk::manage(new class Gtk::Button());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   Gtk::ToolItem *toolitem2 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Image *image3 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-connect"), Gtk::IconSize(4)));
   Gtk::Label *label5 = Gtk::manage(new class Gtk::Label(_("_Mulai Baca Data"), true));
   Gtk::HBox *hbox4 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment4 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   button_logging_data = Gtk::manage(new class Gtk::Button());
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   
   Gtk::ToolItem *toolitem3 = Gtk::manage(new class Gtk::ToolItem());
#endif //
   Gtk::Toolbar *toolbar1 = Gtk::manage(new class Gtk::Toolbar());
   treeview1 = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow2 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::EventBox *eventbox1 = Gtk::manage(new class Gtk::EventBox());
   Gtk::Image *image5 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-index"), Gtk::IconSize(4)));
   Gtk::Button *button_open_kalender = Gtk::manage(new class Gtk::Button());
   Gtk::Adjustment *spin_tanggal_adj = Gtk::manage(new class Gtk::Adjustment(1, 1, 31, 1, 10, 10));
   spin_tanggal = Gtk::manage(new class Gtk::SpinButton(*spin_tanggal_adj, 1, 0));
   
   Gtk::Adjustment *spin_bulan_adj = Gtk::manage(new class Gtk::Adjustment(1, 1, 12, 1, 10, 10));
   spin_bulan = Gtk::manage(new class Gtk::SpinButton(*spin_bulan_adj, 1, 0));
   
   Gtk::Adjustment *spin_tahun_adj = Gtk::manage(new class Gtk::Adjustment(2007, 2007, 2020, 1, 10, 10));
   spin_tahun = Gtk::manage(new class Gtk::SpinButton(*spin_tahun_adj, 1, 0));
   
   Gtk::Image *image4 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-apply"), Gtk::IconSize(4)));
   Gtk::Button *button_tanggal_apply = Gtk::manage(new class Gtk::Button());
   Gtk::HSeparator *hseparator2 = Gtk::manage(new class Gtk::HSeparator());
   Gtk::HBox *hbox6 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::HSeparator *hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   label_info = Gtk::manage(new class Gtk::Label(_("-")));
   label_titik_ukur = Gtk::manage(new class Gtk::Label(_("Titik Ukur")));
   label_waktu = Gtk::manage(new class Gtk::Label(_("waktu:")));
   
   Gtk::HBox *hbox7 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::VBox *vbox4 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment6 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label7 = Gtk::manage(new class Gtk::Label(_("Tanggal")));
   Gtk::Frame *frame2 = Gtk::manage(new class Gtk::Frame());
   tree_data = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow5 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label1 = Gtk::manage(new class Gtk::Label(_("Numerik")));
   Gtk::Image *image15 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-refresh"), Gtk::IconSize(4)));
   Gtk::Button *button_refresh = Gtk::manage(new class Gtk::Button());
   drawingarea1 = Gtk::manage(new class Gtk::DrawingArea());
   hruler1 = Gtk::manage(new class Gtk::HRuler());
   vruler1 = Gtk::manage(new class Gtk::VRuler());
   
   Gtk::Table *table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Label *label2 = Gtk::manage(new class Gtk::Label(_("Grafik")));
   Gtk::Notebook *notebook1 = Gtk::manage(new class Gtk::Notebook());
   Gtk::VBox *vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   label_status_waktu = Gtk::manage(new class Gtk::Label(_("<b>4 Agustus 2008</b>\n"
		"<b>04:15:02</b>")));
   progress_koneksi = Gtk::manage(new class Gtk::ProgressBar());
   
   Gtk::VBox *vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment5 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label6 = Gtk::manage(new class Gtk::Label(_("<b>Status</b>")));
   Gtk::Frame *frame1 = Gtk::manage(new class Gtk::Frame());
   tree_status = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow7 = Gtk::manage(new class Gtk::ScrolledWindow());
   vpaned_status = Gtk::manage(new class Gtk::VPaned());
   
   Gtk::HBox *hbox5 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::HPaned *hpaned1 = Gtk::manage(new class Gtk::HPaned());
   tree_log = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow8 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label8 = Gtk::manage(new class Gtk::Label(_("Log")));
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   expander_log = Gtk::manage(new class Gtk::Expander());
#else //
   expander_log = Gtk::manage(new class Gtk::HandleBox());
#endif //
   vpaned_log = Gtk::manage(new class Gtk::VPaned());
   
   Gtk::Statusbar *statusbar1 = Gtk::manage(new class Gtk::Statusbar());
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Konfigurasi"), *image59));
   konfigurasi1 = (Gtk::ImageMenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Database Setting"), *image60));
   database_login_setting1 = (Gtk::ImageMenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator3 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Buat _Laporan")));
   buat_laporan = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator2 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Tambah Entri Perusahaan")));
   tambah_entri_perusahaan1 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator1 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   quit1 = (Gtk::ImageMenuItem *)&menuitem4_menu->items().back();
   
   menuitem5_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Sumber Data"), *image61));
   sumber_data1 = (Gtk::ImageMenuItem *)&menuitem5_menu->items().back();
   
   menuitem5_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Posting/Pengiriman Data")));
   posting_pengiriman_data1 = (Gtk::MenuItem *)&menuitem5_menu->items().back();
   
   menuitem6_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Mulai Baca Data")));
   mulai_baca_data1 = (Gtk::MenuItem *)&menuitem6_menu->items().back();
   
   menuitem6_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Stop Baca Data")));
   stop_baca_data1 = (Gtk::MenuItem *)&menuitem6_menu->items().back();
   
   menuitem7_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_About")));
   about1 = (Gtk::MenuItem *)&menuitem7_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Aplikasi"), *menuitem4_menu));
   menuitem4 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Sumber/Posting Data"), *menuitem5_menu));
   menuitem5 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Data Logging"), *menuitem6_menu));
   menuitem6 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Help"), *menuitem7_menu));
   menuitem7 = (Gtk::MenuItem *)&menubar1->items().back();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*toolitem1);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Element(*buttonbuka));
   
   Gtk::Widget *toolitem1 = toolbar1->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*toolitem2);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Element(*button_sumber));
   
   Gtk::Widget *toolitem2 = toolbar1->tools().back().get_widget();
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->append(*toolitem3);
#else //
   toolbar1->tools().push_back(Gtk::Toolbar_Helpers::Element(*button_logging_data));
   
   Gtk::Widget *toolitem3 = toolbar1->tools().back().get_widget();
#endif //
   image59->set_alignment(0.5,0.5);
   image59->set_padding(0,0);
   image60->set_alignment(0.5,0.5);
   image60->set_padding(0,0);
   image61->set_alignment(0.5,0.5);
   image61->set_padding(0,0);
   image1->set_alignment(0.5,0.5);
   image1->set_padding(0,0);
   label3->set_alignment(0.5,0.5);
   label3->set_padding(0,0);
   label3->set_justify(Gtk::JUSTIFY_LEFT);
   label3->set_line_wrap(false);
   label3->set_use_markup(false);
   label3->set_selectable(false);
   hbox2->pack_start(*image1, Gtk::PACK_SHRINK, 0);
   hbox2->pack_start(*label3, Gtk::PACK_SHRINK, 0);
   alignment2->add(*hbox2);
   buttonbuka->set_flags(Gtk::CAN_FOCUS);
   buttonbuka->set_relief(Gtk::RELIEF_NORMAL);
   buttonbuka->add(*alignment2);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem1->set_visible_horizontal(true);
   toolitem1->set_visible_vertical(true);
   toolitem1->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem1->add(*buttonbuka);
#endif //
   image2->set_alignment(0.5,0.5);
   image2->set_padding(0,0);
   label4->set_alignment(0.5,0.5);
   label4->set_padding(0,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   hbox3->pack_start(*image2, Gtk::PACK_SHRINK, 0);
   hbox3->pack_start(*label4, Gtk::PACK_SHRINK, 0);
   alignment3->add(*hbox3);
   button_sumber->set_flags(Gtk::CAN_FOCUS);
   button_sumber->set_relief(Gtk::RELIEF_NORMAL);
   button_sumber->add(*alignment3);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem2->set_visible_horizontal(true);
   toolitem2->set_visible_vertical(true);
   toolitem2->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem2->add(*button_sumber);
#endif //
   image3->set_alignment(0.5,0.5);
   image3->set_padding(0,0);
   label5->set_alignment(0.5,0.5);
   label5->set_padding(0,0);
   label5->set_justify(Gtk::JUSTIFY_LEFT);
   label5->set_line_wrap(false);
   label5->set_use_markup(true);
   label5->set_selectable(false);
   hbox4->pack_start(*image3, Gtk::PACK_SHRINK, 0);
   hbox4->pack_start(*label5, Gtk::PACK_SHRINK, 0);
   alignment4->add(*hbox4);
   button_logging_data->set_flags(Gtk::CAN_FOCUS);
   button_logging_data->set_relief(Gtk::RELIEF_NORMAL);
   button_logging_data->add(*alignment4);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem3->set_visible_horizontal(true);
   toolitem3->set_visible_vertical(true);
   toolitem3->set_is_important(false);
#endif //
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem3->add(*button_logging_data);
#endif //
   toolbar1->set_tooltips(true);
   toolbar1->set_toolbar_style(Gtk::TOOLBAR_BOTH);
   toolbar1->set_orientation(Gtk::ORIENTATION_HORIZONTAL);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolbar1->set_show_arrow(true);
#endif //
   treeview1->set_flags(Gtk::CAN_FOCUS);
   treeview1->set_headers_visible(true);
   treeview1->set_rules_hint(false);
   treeview1->set_reorderable(false);
   treeview1->set_enable_search(true);
   scrolledwindow2->set_size_request(100,-1);
   scrolledwindow2->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow2->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow2->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow2->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow2->add(*treeview1);
   eventbox1->add(*scrolledwindow2);
   image5->set_alignment(0.5,0.5);
   image5->set_padding(0,0);
   button_open_kalender->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_open_kalender, _("Pilih tanggal"), "");
   button_open_kalender->set_relief(Gtk::RELIEF_NORMAL);
   button_open_kalender->add(*image5);
   spin_tanggal->set_flags(Gtk::CAN_FOCUS);
   spin_tanggal->set_update_policy(Gtk::UPDATE_IF_VALID);
   spin_tanggal->set_numeric(false);
   spin_tanggal->set_digits(0);
   spin_tanggal->set_wrap(false);
   spin_bulan->set_flags(Gtk::CAN_FOCUS);
   spin_bulan->set_update_policy(Gtk::UPDATE_IF_VALID);
   spin_bulan->set_numeric(true);
   spin_bulan->set_digits(0);
   spin_bulan->set_wrap(false);
   spin_tahun->set_flags(Gtk::CAN_FOCUS);
   spin_tahun->set_update_policy(Gtk::UPDATE_IF_VALID);
   spin_tahun->set_numeric(true);
   spin_tahun->set_digits(0);
   spin_tahun->set_wrap(false);
   image4->set_alignment(0.5,0.5);
   image4->set_padding(0,0);
   button_tanggal_apply->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*button_tanggal_apply, _("Lihat data sesuai tanggal"), "");
   button_tanggal_apply->set_relief(Gtk::RELIEF_NORMAL);
   button_tanggal_apply->add(*image4);
   hbox6->pack_start(*button_open_kalender, Gtk::PACK_SHRINK, 1);
   hbox6->pack_start(*spin_tanggal, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*spin_bulan, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*spin_tahun, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*button_tanggal_apply, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*hseparator2);
   label_info->set_alignment(0.5,0.5);
   label_info->set_padding(0,0);
   label_info->set_justify(Gtk::JUSTIFY_LEFT);
   label_info->set_line_wrap(false);
   label_info->set_use_markup(true);
   label_info->set_selectable(false);
   label_titik_ukur->set_alignment(0.5,0.5);
   label_titik_ukur->set_padding(0,0);
   label_titik_ukur->set_justify(Gtk::JUSTIFY_LEFT);
   label_titik_ukur->set_line_wrap(false);
   label_titik_ukur->set_use_markup(true);
   label_titik_ukur->set_selectable(false);
   label_waktu->set_alignment(0.5,0.5);
   label_waktu->set_padding(0,0);
   label_waktu->set_justify(Gtk::JUSTIFY_RIGHT);
   label_waktu->set_line_wrap(false);
   label_waktu->set_use_markup(true);
   label_waktu->set_selectable(false);
   hbox7->pack_start(*label_info, Gtk::PACK_SHRINK, 0);
   hbox7->pack_start(*label_titik_ukur);
   hbox7->pack_start(*label_waktu, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox6);
   vbox4->pack_start(*hseparator1, Gtk::PACK_SHRINK, 8);
   vbox4->pack_start(*hbox7, Gtk::PACK_SHRINK, 0);
   alignment6->add(*vbox4);
   label7->set_alignment(0.5,0.5);
   label7->set_padding(0,0);
   label7->set_justify(Gtk::JUSTIFY_LEFT);
   label7->set_line_wrap(false);
   label7->set_use_markup(true);
   label7->set_selectable(false);
   frame2->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment6);
   frame2->set_label_widget(*label7);
   tree_data->set_flags(Gtk::CAN_FOCUS);
   tree_data->set_headers_visible(true);
   tree_data->set_rules_hint(true);
   tree_data->set_reorderable(false);
   tree_data->set_enable_search(true);
   scrolledwindow5->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow5->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow5->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow5->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow5->add(*tree_data);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(false);
   label1->set_selectable(false);
   image15->set_alignment(0.5,0.5);
   image15->set_padding(0,0);
   button_refresh->set_flags(Gtk::CAN_FOCUS);
   button_refresh->set_relief(Gtk::RELIEF_NORMAL);
   button_refresh->add(*image15);
   hruler1->set_range(0, 24, 18.8571, 24);
   vruler1->set_size_request(43,-1);
   vruler1->set_range(1000, 0, 632.076, 1000);
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*button_refresh, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*drawingarea1, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table1->attach(*hruler1, 1, 2, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   table1->attach(*vruler1, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   label2->set_alignment(0.5,0.5);
   label2->set_padding(0,0);
   label2->set_justify(Gtk::JUSTIFY_LEFT);
   label2->set_line_wrap(false);
   label2->set_use_markup(false);
   label2->set_selectable(false);
   notebook1->set_flags(Gtk::CAN_FOCUS);
   notebook1->set_show_tabs(true);
   notebook1->set_show_border(true);
   notebook1->set_tab_pos(Gtk::POS_BOTTOM);
   notebook1->set_scrollable(false);
   notebook1->append_page(*scrolledwindow5, *label1);
   notebook1->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook1->append_page(*table1, *label2);
   notebook1->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   vbox3->pack_start(*frame2, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*notebook1);
   label_status_waktu->set_alignment(0.5,0.5);
   label_status_waktu->set_padding(0,0);
   label_status_waktu->set_justify(Gtk::JUSTIFY_CENTER);
   label_status_waktu->set_line_wrap(false);
   label_status_waktu->set_use_markup(true);
   label_status_waktu->set_selectable(false);
   progress_koneksi->set_size_request(-1,30);
   vbox2->pack_start(*label_status_waktu, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*progress_koneksi, Gtk::PACK_SHRINK, 0);
   alignment5->add(*vbox2);
   label6->set_alignment(0.5,0.5);
   label6->set_padding(0,0);
   label6->set_justify(Gtk::JUSTIFY_LEFT);
   label6->set_line_wrap(false);
   label6->set_use_markup(true);
   label6->set_selectable(false);
   frame1->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignment5);
   frame1->set_label_widget(*label6);
   tree_status->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*tree_status, _("Keterangan"), "");
   tree_status->set_headers_visible(true);
   tree_status->set_rules_hint(true);
   tree_status->set_reorderable(false);
   tree_status->set_enable_search(true);
   scrolledwindow7->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow7->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow7->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow7->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow7->add(*tree_status);
   vpaned_status->set_size_request(200,-1);
   vpaned_status->set_flags(Gtk::CAN_FOCUS);
   vpaned_status->set_position(0);
   vpaned_status->pack1(*frame1, Gtk::AttachOptions(0));
   vpaned_status->pack2(*scrolledwindow7, Gtk::EXPAND|Gtk::SHRINK);
   hbox5->pack_start(*vbox3);
   hbox5->pack_start(*vpaned_status, Gtk::PACK_SHRINK, 0);
   hpaned1->set_flags(Gtk::CAN_FOCUS);
   hpaned1->set_position(0);
   hpaned1->pack1(*eventbox1, Gtk::EXPAND);
   hpaned1->pack2(*hbox5, Gtk::EXPAND|Gtk::SHRINK);
   tree_log->set_size_request(300,176);
   tree_log->set_flags(Gtk::CAN_FOCUS);
   tree_log->set_headers_visible(false);
   tree_log->set_rules_hint(false);
   tree_log->set_reorderable(false);
   tree_log->set_enable_search(true);
   scrolledwindow8->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow8->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow8->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow8->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow8->add(*tree_log);
   label8->set_alignment(0.5,0.5);
   label8->set_padding(0,0);
   label8->set_justify(Gtk::JUSTIFY_LEFT);
   label8->set_line_wrap(false);
   label8->set_use_markup(false);
   label8->set_selectable(false);
   expander_log->set_size_request(45,20);
   expander_log->set_flags(Gtk::CAN_FOCUS);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   expander_log->set_expanded(true);
   expander_log->set_spacing(0);
#endif //
   expander_log->add(*scrolledwindow8);
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   expander_log->set_label_widget(*label8);
#endif //
   vpaned_log->set_flags(Gtk::CAN_FOCUS);
   vpaned_log->set_position(0);
   vpaned_log->pack1(*hpaned1, Gtk::EXPAND);
   vpaned_log->pack2(*expander_log, Gtk::EXPAND);
   vbox1->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*toolbar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*vpaned_log);
   vbox1->pack_start(*statusbar1, Gtk::PACK_SHRINK, 0);
   alignment1->add(*vbox1);
   main_window->set_border_width(4);
   main_window->set_title(_("Monita Beta"));
   main_window->set_modal(false);
   main_window->property_window_position().set_value(Gtk::WIN_POS_CENTER);
   main_window->set_resizable(true);
   main_window->property_destroy_with_parent().set_value(false);
   main_window->add(*alignment1);
   image59->show();
   konfigurasi1->show();
   image60->show();
   database_login_setting1->show();
   separator3->show();
   buat_laporan->show();
   separator2->show();
   tambah_entri_perusahaan1->show();
   separator1->show();
   quit1->show();
   menuitem4->show();
   image61->show();
   sumber_data1->show();
   posting_pengiriman_data1->show();
   menuitem5->show();
   mulai_baca_data1->show();
   stop_baca_data1->show();
   menuitem6->show();
   about1->show();
   menuitem7->show();
   menubar1->show();
   image1->show();
   label3->show();
   hbox2->show();
   alignment2->show();
   buttonbuka->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem1->show();
#endif //
   image2->show();
   label4->show();
   hbox3->show();
   alignment3->show();
   button_sumber->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem2->show();
#endif //
   image3->show();
   label5->show();
   hbox4->show();
   alignment4->show();
   button_logging_data->show();
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
   toolitem3->show();
#endif //
   toolbar1->show();
   treeview1->show();
   scrolledwindow2->show();
   eventbox1->show();
   image5->show();
   button_open_kalender->show();
   spin_tanggal->show();
   spin_bulan->show();
   spin_tahun->show();
   image4->show();
   button_tanggal_apply->show();
   hseparator2->show();
   hbox6->show();
   hseparator1->show();
   label_info->show();
   label_titik_ukur->show();
   label_waktu->show();
   hbox7->show();
   vbox4->show();
   alignment6->show();
   label7->show();
   frame2->show();
   tree_data->show();
   scrolledwindow5->show();
   label1->show();
   image15->show();
   button_refresh->show();
   drawingarea1->show();
   hruler1->show();
   vruler1->show();
   table1->show();
   label2->show();
   notebook1->show();
   vbox3->show();
   label_status_waktu->show();
   progress_koneksi->show();
   vbox2->show();
   alignment5->show();
   label6->show();
   frame1->show();
   tree_status->show();
   scrolledwindow7->show();
   hbox5->show();
   hpaned1->show();
   tree_log->show();
   scrolledwindow8->show();
   label8->show();
   expander_log->show();
   vpaned_log->show();
   statusbar1->show();
   vbox1->show();
   alignment1->show();
   main_window->show();
   konfigurasi1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_konfigurasi1_activate), false);
   database_login_setting1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_database_login_setting1_activate), false);
   buat_laporan->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_buat_laporan_activate), false);
   tambah_entri_perusahaan1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_tambah_entri_perusahaan1_activate), false);
   quit1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_quit1_activate), false);
   sumber_data1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_sumber_data1_activate), false);
   posting_pengiriman_data1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_posting_pengiriman_data1_activate), false);
   mulai_baca_data1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_mulai_baca_data1_activate), false);
   stop_baca_data1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_stop_baca_data1_activate), false);
   about1->signal_activate().connect(SigC::slot(*this, &main_window_glade::on_about1_activate), false);
   buttonbuka->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_buttonbuka_clicked), false);
   button_sumber->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_sumber_clicked), false);
   button_logging_data->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_logging_data_clicked), false);
   treeview1->signal_row_expanded().connect(SigC::slot(*this, &main_window_glade::on_treeview1_row_expanded), false);
   treeview1->signal_cursor_changed().connect(SigC::slot(*this, &main_window_glade::on_treeview1_cursor_changed), false);
   treeview1->signal_button_press_event().connect(SigC::slot(*this, &main_window_glade::on_treeview1_button_press_event), false);
   treeview1->signal_button_press_event().connect(SigC::slot(*this, &main_window_glade::on_treeview1_button_press_event), false);
   button_open_kalender->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_open_kalender_clicked), false);
   button_tanggal_apply->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_tanggal_apply_clicked), false);
   tree_data->signal_button_press_event().connect(SigC::slot(*this, &main_window_glade::on_tree_data_button_press_event), false);
   button_refresh->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_refresh_clicked), false);
   drawingarea1->signal_expose_event().connect(SigC::slot(*this, &main_window_glade::on_drawingarea1_expose_event), false);
   notebook1->signal_switch_page().connect(SigC::slot(*this, &main_window_glade::on_notebook1_switch_page), false);
   tree_status->signal_cursor_changed().connect(SigC::slot(*this, &main_window_glade::on_tree_status_cursor_changed), false);
   tree_status->signal_button_press_event().connect(SigC::slot(*this, &main_window_glade::on_tree_status_button_press_event), false);
   main_window->signal_delete_event().connect(SigC::slot(*this, &main_window_glade::on_main_window_delete_event), false);
}

main_window_glade::~main_window_glade()
{  delete gmm_data;
}
