// generated 2009/4/29 14:49:50 EIT by herry@LancarJaya.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/herry/program/pm_server/src/pm_server.glade
// for gtk 2.12.9 and gtkmm 2.12.5
//
// Please modify the corresponding derived classes in .//main_window.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_window_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/label.h>
#include <gtkmm/combobox.h>
#include <gtkmm/table.h>
#include <gtkmm/alignment.h>
#include <gtkmm/frame.h>
#include <gtkmm/radiobutton.h>
#include <gtkmm/box.h>
#include <gtkmm/viewport.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/separator.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/notebook.h>

main_window_glade::main_window_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  main_window = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Label *label_com = Gtk::manage(new class Gtk::Label(_("Port Serial ")));
   button_connect = Gtk::manage(new class Gtk::Button(_("Sambungkan")));
   
   Gtk::ComboBox *combo_com = Gtk::manage(new class Gtk::ComboBox());
   Gtk::Table *table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label_frame = Gtk::manage(new class Gtk::Label(_("Setting")));
   Gtk::Frame *frame1 = Gtk::manage(new class Gtk::Frame());
   Gtk::RadioButton::Group _RadioBGroup_button_1;
   Gtk::RadioButton *button_1 = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_button_1, _("Mesin 1")));
   Gtk::RadioButton *button_2 = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_button_1, _("Mesin 2")));
   Gtk::RadioButton *button_3 = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_button_1, _("Mesin 3")));
   Gtk::RadioButton *button_4 = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_button_1, _("Mesin 4")));
   Gtk::RadioButton *button_5 = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_button_1, _("Mesin 5")));
   Gtk::VBox *vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Viewport *viewport1 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   label_kw = Gtk::manage(new class Gtk::Label(_("KW")));
   label_kva = Gtk::manage(new class Gtk::Label(_("KVA")));
   label_kvar = Gtk::manage(new class Gtk::Label(_("KVAR")));
   
   Gtk::VBox *vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *Beban = Gtk::manage(new class Gtk::Label(_("Daya/Beban")));
   Gtk::Frame *frame2 = Gtk::manage(new class Gtk::Frame());
   label_kwh = Gtk::manage(new class Gtk::Label(_("KWh")));
   label_kvah = Gtk::manage(new class Gtk::Label(_("KVAh")));
   label_kvarh = Gtk::manage(new class Gtk::Label(_("KVArh")));
   
   Gtk::VBox *vbox4 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label15 = Gtk::manage(new class Gtk::Label(_("Energi")));
   Gtk::Frame *frame3 = Gtk::manage(new class Gtk::Frame());
   label_ampl1 = Gtk::manage(new class Gtk::Label(_("Ampere L1")));
   label_ampl2 = Gtk::manage(new class Gtk::Label(_("Ampere L2")));
   label_ampl3 = Gtk::manage(new class Gtk::Label(_("Ampere L3")));
   label_ampn = Gtk::manage(new class Gtk::Label(_("Ampere N")));
   
   Gtk::VBox *vbox5 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment4 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label19 = Gtk::manage(new class Gtk::Label(_("Ampere")));
   Gtk::Frame *frame4 = Gtk::manage(new class Gtk::Frame());
   label_frek = Gtk::manage(new class Gtk::Label(_("Frekuensi")));
   label_cospi = Gtk::manage(new class Gtk::Label(_("Cos Phi")));
   label22 = Gtk::manage(new class Gtk::Label(_("")));
   
   Gtk::VBox *vbox6 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment5 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label23 = Gtk::manage(new class Gtk::Label(_("Frekuensi")));
   Gtk::Frame *frame5 = Gtk::manage(new class Gtk::Frame());
   label_vl1l2 = Gtk::manage(new class Gtk::Label(_("V L1-L2")));
   label_vl2l3 = Gtk::manage(new class Gtk::Label(_("V L2-L3")));
   label_vl1l3 = Gtk::manage(new class Gtk::Label(_("V L1-L3")));
   
   Gtk::HSeparator *hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   label_voltl1n = Gtk::manage(new class Gtk::Label(_("V L1-N")));
   label_voltl2n = Gtk::manage(new class Gtk::Label(_("V L2-N")));
   label_voltl3n = Gtk::manage(new class Gtk::Label(_("V L3-N")));
   
   Gtk::VBox *vbox7 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment6 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label27 = Gtk::manage(new class Gtk::Label(_("Volt")));
   Gtk::Frame *frame6 = Gtk::manage(new class Gtk::Frame());
   label_vll = Gtk::manage(new class Gtk::Label(_("Volt L-L")));
   label_vln = Gtk::manage(new class Gtk::Label(_("Volt L-N")));
   label_ampr = Gtk::manage(new class Gtk::Label(_("Ampere")));
   
   Gtk::VBox *vbox8 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment7 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *Rata_rata = Gtk::manage(new class Gtk::Label(_("Rata-rata")));
   Gtk::Frame *frame7 = Gtk::manage(new class Gtk::Frame());
   Gtk::Table *table2 = Gtk::manage(new class Gtk::Table(2, 2, true));
   Gtk::Label *label3 = Gtk::manage(new class Gtk::Label(_("Parameter Utama")));
   list_pm = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow2 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label4 = Gtk::manage(new class Gtk::Label(_("Semua Parameter")));
   Gtk::Notebook *notebook1 = Gtk::manage(new class Gtk::Notebook());
   statusbar1 = Gtk::manage(new class Gtk::Statusbar());
   
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   label_com->set_alignment(0,0.5);
   label_com->set_padding(0,0);
   label_com->set_justify(Gtk::JUSTIFY_LEFT);
   label_com->set_line_wrap(false);
   label_com->set_use_markup(false);
   label_com->set_selectable(false);
   button_connect->set_flags(Gtk::CAN_FOCUS);
   button_connect->set_relief(Gtk::RELIEF_NORMAL);
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*label_com, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*button_connect, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*combo_com, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   alignment1->add(*table1);
   label_frame->set_alignment(0.5,0.5);
   label_frame->set_padding(0,0);
   label_frame->set_justify(Gtk::JUSTIFY_LEFT);
   label_frame->set_line_wrap(false);
   label_frame->set_use_markup(true);
   label_frame->set_selectable(false);
   frame1->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignment1);
   frame1->set_label_widget(*label_frame);
   button_1->set_flags(Gtk::CAN_FOCUS);
   button_1->set_relief(Gtk::RELIEF_NORMAL);
   button_1->set_mode(true);
   button_1->set_active(false);
   button_2->set_flags(Gtk::CAN_FOCUS);
   button_2->set_relief(Gtk::RELIEF_NORMAL);
   button_2->set_mode(true);
   button_2->set_active(false);
   button_3->set_flags(Gtk::CAN_FOCUS);
   button_3->set_relief(Gtk::RELIEF_NORMAL);
   button_3->set_mode(true);
   button_3->set_active(false);
   button_4->set_flags(Gtk::CAN_FOCUS);
   button_4->set_relief(Gtk::RELIEF_NORMAL);
   button_4->set_mode(true);
   button_4->set_active(false);
   button_5->set_flags(Gtk::CAN_FOCUS);
   button_5->set_relief(Gtk::RELIEF_NORMAL);
   button_5->set_mode(true);
   button_5->set_active(false);
   vbox2->pack_start(*button_1, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*button_2, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*button_3, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*button_4, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*button_5, Gtk::PACK_SHRINK, 0);
   viewport1->set_shadow_type(Gtk::SHADOW_IN);
   viewport1->add(*vbox2);
   label_kw->set_alignment(0.5,0.5);
   label_kw->set_padding(0,0);
   label_kw->set_justify(Gtk::JUSTIFY_LEFT);
   label_kw->set_line_wrap(false);
   label_kw->set_use_markup(true);
   label_kw->set_selectable(false);
   label_kva->set_alignment(0.5,0.5);
   label_kva->set_padding(0,0);
   label_kva->set_justify(Gtk::JUSTIFY_LEFT);
   label_kva->set_line_wrap(false);
   label_kva->set_use_markup(false);
   label_kva->set_selectable(false);
   label_kvar->set_alignment(0.5,0.5);
   label_kvar->set_padding(0,0);
   label_kvar->set_justify(Gtk::JUSTIFY_LEFT);
   label_kvar->set_line_wrap(false);
   label_kvar->set_use_markup(false);
   label_kvar->set_selectable(false);
   vbox3->set_border_width(5);
   vbox3->pack_start(*label_kw, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*label_kva, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*label_kvar, Gtk::PACK_SHRINK, 0);
   alignment2->add(*vbox3);
   Beban->set_alignment(0.5,0.5);
   Beban->set_padding(0,0);
   Beban->set_justify(Gtk::JUSTIFY_LEFT);
   Beban->set_line_wrap(false);
   Beban->set_use_markup(true);
   Beban->set_selectable(false);
   frame2->set_border_width(5);
   frame2->set_shadow_type(Gtk::SHADOW_IN);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment2);
   frame2->set_label_widget(*Beban);
   label_kwh->set_alignment(0.5,0.5);
   label_kwh->set_padding(0,0);
   label_kwh->set_justify(Gtk::JUSTIFY_LEFT);
   label_kwh->set_line_wrap(false);
   label_kwh->set_use_markup(false);
   label_kwh->set_selectable(false);
   label_kvah->set_alignment(0.5,0.5);
   label_kvah->set_padding(0,0);
   label_kvah->set_justify(Gtk::JUSTIFY_LEFT);
   label_kvah->set_line_wrap(false);
   label_kvah->set_use_markup(false);
   label_kvah->set_selectable(false);
   label_kvarh->set_alignment(0.5,0.5);
   label_kvarh->set_padding(0,0);
   label_kvarh->set_justify(Gtk::JUSTIFY_LEFT);
   label_kvarh->set_line_wrap(false);
   label_kvarh->set_use_markup(false);
   label_kvarh->set_selectable(false);
   vbox4->set_border_width(5);
   vbox4->pack_start(*label_kwh, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*label_kvah, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*label_kvarh, Gtk::PACK_SHRINK, 0);
   alignment3->add(*vbox4);
   label15->set_alignment(0.5,0.5);
   label15->set_padding(0,0);
   label15->set_justify(Gtk::JUSTIFY_LEFT);
   label15->set_line_wrap(false);
   label15->set_use_markup(true);
   label15->set_selectable(false);
   frame3->set_border_width(5);
   frame3->set_shadow_type(Gtk::SHADOW_IN);
   frame3->set_label_align(0,0.5);
   frame3->add(*alignment3);
   frame3->set_label_widget(*label15);
   label_ampl1->set_alignment(0.5,0.5);
   label_ampl1->set_padding(0,0);
   label_ampl1->set_justify(Gtk::JUSTIFY_LEFT);
   label_ampl1->set_line_wrap(false);
   label_ampl1->set_use_markup(false);
   label_ampl1->set_selectable(false);
   label_ampl2->set_alignment(0.5,0.5);
   label_ampl2->set_padding(0,0);
   label_ampl2->set_justify(Gtk::JUSTIFY_LEFT);
   label_ampl2->set_line_wrap(false);
   label_ampl2->set_use_markup(false);
   label_ampl2->set_selectable(false);
   label_ampl3->set_alignment(0.5,0.5);
   label_ampl3->set_padding(0,0);
   label_ampl3->set_justify(Gtk::JUSTIFY_LEFT);
   label_ampl3->set_line_wrap(false);
   label_ampl3->set_use_markup(false);
   label_ampl3->set_selectable(false);
   label_ampn->set_alignment(0.5,0.5);
   label_ampn->set_padding(0,0);
   label_ampn->set_justify(Gtk::JUSTIFY_LEFT);
   label_ampn->set_line_wrap(false);
   label_ampn->set_use_markup(false);
   label_ampn->set_selectable(false);
   vbox5->set_border_width(5);
   vbox5->pack_start(*label_ampl1, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*label_ampl2, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*label_ampl3, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*label_ampn, Gtk::PACK_SHRINK, 0);
   alignment4->add(*vbox5);
   label19->set_alignment(0.5,0.5);
   label19->set_padding(0,0);
   label19->set_justify(Gtk::JUSTIFY_LEFT);
   label19->set_line_wrap(false);
   label19->set_use_markup(true);
   label19->set_selectable(false);
   frame4->set_border_width(5);
   frame4->set_shadow_type(Gtk::SHADOW_IN);
   frame4->set_label_align(0,0.5);
   frame4->add(*alignment4);
   frame4->set_label_widget(*label19);
   label_frek->set_alignment(0.5,0.5);
   label_frek->set_padding(0,0);
   label_frek->set_justify(Gtk::JUSTIFY_LEFT);
   label_frek->set_line_wrap(false);
   label_frek->set_use_markup(false);
   label_frek->set_selectable(false);
   label_cospi->set_alignment(0.5,0.5);
   label_cospi->set_padding(0,0);
   label_cospi->set_justify(Gtk::JUSTIFY_LEFT);
   label_cospi->set_line_wrap(false);
   label_cospi->set_use_markup(false);
   label_cospi->set_selectable(false);
   label22->set_alignment(0.5,0.5);
   label22->set_padding(0,0);
   label22->set_justify(Gtk::JUSTIFY_LEFT);
   label22->set_line_wrap(false);
   label22->set_use_markup(false);
   label22->set_selectable(false);
   vbox6->set_border_width(5);
   vbox6->pack_start(*label_frek, Gtk::PACK_SHRINK, 0);
   vbox6->pack_start(*label_cospi, Gtk::PACK_SHRINK, 0);
   vbox6->pack_start(*label22, Gtk::PACK_SHRINK, 0);
   alignment5->add(*vbox6);
   label23->set_alignment(0.5,0.5);
   label23->set_padding(0,0);
   label23->set_justify(Gtk::JUSTIFY_LEFT);
   label23->set_line_wrap(false);
   label23->set_use_markup(true);
   label23->set_selectable(false);
   frame5->set_border_width(5);
   frame5->set_shadow_type(Gtk::SHADOW_IN);
   frame5->set_label_align(0,0.5);
   frame5->add(*alignment5);
   frame5->set_label_widget(*label23);
   label_vl1l2->set_alignment(0.5,0.5);
   label_vl1l2->set_padding(0,0);
   label_vl1l2->set_justify(Gtk::JUSTIFY_LEFT);
   label_vl1l2->set_line_wrap(false);
   label_vl1l2->set_use_markup(false);
   label_vl1l2->set_selectable(false);
   label_vl2l3->set_alignment(0.5,0.5);
   label_vl2l3->set_padding(0,0);
   label_vl2l3->set_justify(Gtk::JUSTIFY_LEFT);
   label_vl2l3->set_line_wrap(false);
   label_vl2l3->set_use_markup(false);
   label_vl2l3->set_selectable(false);
   label_vl1l3->set_alignment(0.5,0.5);
   label_vl1l3->set_padding(0,0);
   label_vl1l3->set_justify(Gtk::JUSTIFY_LEFT);
   label_vl1l3->set_line_wrap(false);
   label_vl1l3->set_use_markup(false);
   label_vl1l3->set_selectable(false);
   label_voltl1n->set_alignment(0.5,0.5);
   label_voltl1n->set_padding(0,0);
   label_voltl1n->set_justify(Gtk::JUSTIFY_LEFT);
   label_voltl1n->set_line_wrap(false);
   label_voltl1n->set_use_markup(false);
   label_voltl1n->set_selectable(false);
   label_voltl2n->set_alignment(0.5,0.5);
   label_voltl2n->set_padding(0,0);
   label_voltl2n->set_justify(Gtk::JUSTIFY_LEFT);
   label_voltl2n->set_line_wrap(false);
   label_voltl2n->set_use_markup(false);
   label_voltl2n->set_selectable(false);
   label_voltl3n->set_alignment(0.5,0.5);
   label_voltl3n->set_padding(0,0);
   label_voltl3n->set_justify(Gtk::JUSTIFY_LEFT);
   label_voltl3n->set_line_wrap(false);
   label_voltl3n->set_use_markup(false);
   label_voltl3n->set_selectable(false);
   vbox7->set_border_width(5);
   vbox7->pack_start(*label_vl1l2, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*label_vl2l3, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*label_vl1l3, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*hseparator1, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*label_voltl1n, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*label_voltl2n, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*label_voltl3n, Gtk::PACK_SHRINK, 0);
   alignment6->add(*vbox7);
   label27->set_alignment(0.5,0.5);
   label27->set_padding(0,0);
   label27->set_justify(Gtk::JUSTIFY_LEFT);
   label27->set_line_wrap(false);
   label27->set_use_markup(true);
   label27->set_selectable(false);
   frame6->set_border_width(5);
   frame6->set_shadow_type(Gtk::SHADOW_IN);
   frame6->set_label_align(0,0.5);
   frame6->add(*alignment6);
   frame6->set_label_widget(*label27);
   label_vll->set_alignment(0.5,0.5);
   label_vll->set_padding(0,0);
   label_vll->set_justify(Gtk::JUSTIFY_LEFT);
   label_vll->set_line_wrap(false);
   label_vll->set_use_markup(false);
   label_vll->set_selectable(false);
   label_vln->set_alignment(0.5,0.5);
   label_vln->set_padding(0,0);
   label_vln->set_justify(Gtk::JUSTIFY_LEFT);
   label_vln->set_line_wrap(false);
   label_vln->set_use_markup(false);
   label_vln->set_selectable(false);
   label_ampr->set_alignment(0.5,0.5);
   label_ampr->set_padding(0,0);
   label_ampr->set_justify(Gtk::JUSTIFY_LEFT);
   label_ampr->set_line_wrap(false);
   label_ampr->set_use_markup(false);
   label_ampr->set_selectable(false);
   vbox8->set_border_width(5);
   vbox8->pack_start(*label_vll, Gtk::PACK_SHRINK, 0);
   vbox8->pack_start(*label_vln, Gtk::PACK_SHRINK, 0);
   vbox8->pack_start(*label_ampr, Gtk::PACK_SHRINK, 0);
   alignment7->add(*vbox8);
   Rata_rata->set_alignment(0.5,0.5);
   Rata_rata->set_padding(0,0);
   Rata_rata->set_justify(Gtk::JUSTIFY_LEFT);
   Rata_rata->set_line_wrap(false);
   Rata_rata->set_use_markup(true);
   Rata_rata->set_selectable(false);
   frame7->set_border_width(5);
   frame7->set_shadow_type(Gtk::SHADOW_IN);
   frame7->set_label_align(0,0.5);
   frame7->add(*alignment7);
   frame7->set_label_widget(*Rata_rata);
   table2->set_row_spacings(0);
   table2->set_col_spacings(0);
   table2->attach(*frame2, 0, 1, 0, 1, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table2->attach(*frame3, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*frame4, 0, 1, 1, 2, Gtk::FILL, Gtk::EXPAND|Gtk::FILL, 0, 0);
   table2->attach(*frame5, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*frame6, 2, 3, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*frame7, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   label3->set_alignment(0.5,0.5);
   label3->set_padding(0,0);
   label3->set_justify(Gtk::JUSTIFY_LEFT);
   label3->set_line_wrap(false);
   label3->set_use_markup(false);
   label3->set_selectable(false);
   list_pm->set_flags(Gtk::CAN_FOCUS);
   list_pm->set_headers_visible(true);
   list_pm->set_rules_hint(false);
   list_pm->set_reorderable(false);
   list_pm->set_enable_search(true);
   scrolledwindow2->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow2->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow2->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   scrolledwindow2->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow2->add(*list_pm);
   label4->set_alignment(0.5,0.5);
   label4->set_padding(0,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   notebook1->set_flags(Gtk::CAN_FOCUS);
   notebook1->set_show_tabs(true);
   notebook1->set_show_border(true);
   notebook1->set_tab_pos(Gtk::POS_TOP);
   notebook1->set_scrollable(false);
   notebook1->append_page(*table2, *label3);
   notebook1->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   notebook1->append_page(*scrolledwindow2, *label4);
   notebook1->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   vbox1->pack_start(*frame1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*viewport1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*notebook1);
   vbox1->pack_start(*statusbar1, Gtk::PACK_SHRINK, 0);
   main_window->set_border_width(1);
   main_window->set_title(_("PM Server"));
   main_window->set_default_size(500,400);
   main_window->set_modal(false);
   main_window->property_window_position().set_value(Gtk::WIN_POS_NONE);
   main_window->set_resizable(true);
   main_window->property_destroy_with_parent().set_value(false);
   main_window->add(*vbox1);
   label_com->show();
   button_connect->show();
   combo_com->show();
   table1->show();
   alignment1->show();
   label_frame->show();
   frame1->show();
   button_1->show();
   button_2->show();
   button_3->show();
   button_4->show();
   button_5->show();
   vbox2->show();
   viewport1->show();
   label_kw->show();
   label_kva->show();
   label_kvar->show();
   vbox3->show();
   alignment2->show();
   Beban->show();
   frame2->show();
   label_kwh->show();
   label_kvah->show();
   label_kvarh->show();
   vbox4->show();
   alignment3->show();
   label15->show();
   frame3->show();
   label_ampl1->show();
   label_ampl2->show();
   label_ampl3->show();
   label_ampn->show();
   vbox5->show();
   alignment4->show();
   label19->show();
   frame4->show();
   label_frek->show();
   label_cospi->show();
   label22->show();
   vbox6->show();
   alignment5->show();
   label23->show();
   frame5->show();
   label_vl1l2->show();
   label_vl2l3->show();
   label_vl1l3->show();
   hseparator1->show();
   label_voltl1n->show();
   label_voltl2n->show();
   label_voltl3n->show();
   vbox7->show();
   alignment6->show();
   label27->show();
   frame6->show();
   label_vll->show();
   label_vln->show();
   label_ampr->show();
   vbox8->show();
   alignment7->show();
   Rata_rata->show();
   frame7->show();
   table2->show();
   label3->show();
   list_pm->show();
   scrolledwindow2->show();
   label4->show();
   notebook1->show();
   statusbar1->show();
   vbox1->show();
   main_window->show();
   button_connect->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_connect_clicked), false);
   button_1->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_1_clicked), false);
   button_2->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_2_clicked), false);
   button_3->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_3_clicked), false);
   button_4->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_4_clicked), false);
   button_5->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_5_clicked), false);
}

main_window_glade::~main_window_glade()
{  delete gmm_data;
}
